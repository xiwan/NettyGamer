<?xml version="1.0" encoding="UTF-8"?>
<configuration status="error">
	<!--先定义所有的appender -->
	<appenders>
		<!--这个输出控制台的配置 -->
		<Console name="Console" target="SYSTEM_OUT">
			<!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch） -->
			<ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY" />
			<!--这个都知道是输出日志的格式 -->
			<PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n" />
		</Console>
		<!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用
		<File name="log" fileName="logs/game.log" append="true"> <PatternLayout pattern="%d{HH:mm:ss.SSS} 
			%-5level %class{36} %L %M - %msg%xEx%n"/> </File>  -->
		<!-- 这个会打印出所有的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档 --> 
		<RollingFile name="RollingFile" fileName="logs/app.log"
			filePattern="logs/$${date:yyyy-MM}/app-%d{yyyyMMddHH}.log.gz">
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n" />
			<TimeBasedTriggeringPolicy interval="1" modulate="true" />
		</RollingFile>
		<!-- Don't forget to set system property
-Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector
     to make all loggers asynchronous. -->
     
		<!-- Async Loggers will auto-flush in batches, so switch off immediateFlush. -->
    <RandomAccessFile name="RandomAccessFile" fileName="/data/game/logs/async.log" immediateFlush="false" append="true">
      <PatternLayout>
        <Pattern>%d{yyyy-MM-dd HH:mm:ss z} %-5level %class{36} %L %M - %msg%xEx%n</Pattern>
      </PatternLayout>
    </RandomAccessFile>
	</appenders>
	<!--然后定义logger，只有定义了logger并引入的appender，appender才会生效 -->
	<loggers>
		<!--建立一个默认的root的logger -->
		<root level="trace">
			<appender-ref ref="Console" />
			<appender-ref ref="RandomAccessFile" />
		</root>
	</loggers>
</configuration>